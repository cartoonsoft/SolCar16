@model AdmCartorio.ViewModels.CadastroDeAtoViewModel

@{
    ViewBag.Title = "Atos";
    ViewBag.SubTitle = "Novo Ato";
}



@section styles_especific{
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.10/css/jquery.dataTables.min.css">
    <style type="text/css">

        /************************************************************************************
        ************************* CSS DO EDITOR DE TEXTO DO WORD ****************************
        *************************************************************************************/

        .document-editor {
            border: 1px solid var(--ck-color-base-border);
            border-radius: var(--ck-border-radius);
            /* Set vertical boundaries for the document editor. */
            max-height: 700px;
            /* This element is a flex container for easier rendering. */
            display: flex;
            flex-flow: column nowrap;
        }

        .document-editor__toolbar {
            /* Make sure the toolbar container is always above the editable. */
            z-index: 1;
            /* Create the illusion of the toolbar floating over the editable. */
            box-shadow: 0 0 5px hsla( 0,0%,0%,.2 );
            /* Use the CKEditor CSS variables to keep the UI consistent. */
            border-bottom: 1px solid var(--ck-color-toolbar-border);
        }

            /* Adjust the look of the toolbar inside the container. */
            .document-editor__toolbar .ck-toolbar {
                border: 0;
                border-radius: 0;
            }

        /* Make the editable container look like the inside of a native word processor application. */
        .document-editor__editable-container {
            padding: calc( 2 * var(--ck-spacing-large) );
            background: var(--ck-color-base-foreground);
            /* Make it possible to scroll the "page" of the edited content. */
            overflow-y: scroll;
        }

            .document-editor__editable-container .ck-editor__editable {
                /* Set the dimensions of the "page". */
                width: 14.3cm;
                min-height: 21cm;
                /* Keep the "page" off the boundaries of the container. */
                padding: 1cm 1cm 1cm;
                border: 1px hsl( 0,0%,82.7% ) solid;
                border-radius: var(--ck-border-radius);
                background: white;
                /* The "page" should cast a slight shadow (3D illusion). */
                box-shadow: 0 0 5px hsla( 0,0%,0%,.1 );
                /* Center the "page". */
                margin: 0 auto;
            }

        .document-editor .ck-content, .document-editor .ck-heading-dropdown .ck-list .ck-button__label {
            font: 18px/1.8 "Times New Roman", Helvetica, Arial, sans-serif;
        }

        .document-editor .ck-heading-dropdown .ck-list .ck-button__label {
            line-height: calc( 1.7 * var(--ck-line-height-base) * var(--ck-font-size-base) );
            min-width: 6em;
        }

        /* Scale down all heading previews because they are way too big to be presented in the UI.
        Preserve the relative scale, though. */
        .document-editor .ck-heading-dropdown .ck-list .ck-button:not(.ck-heading_paragraph) .ck-button__label {
            transform: scale(0.8);
            transform-origin: left;
        }
        /* Set the styles for "Paragraph". */
        .document-editor .ck-content p {
            font-size: 18px;
            line-height: 0.6cm;
            /*padding-top: .5em;*/
            /*margin-bottom: 0.4cm;*/
            font-family: "Times New Roman";
        }

        .document-editor .ck-content blockquote {
            font-family: Georgia, serif;
            margin-left: calc( 2 * var(--ck-spacing-large) );
            margin-right: calc( 2 * var(--ck-spacing-large) );
        }
    </style>
}



@if (ViewBag.sucesso != null)
{
    <div class="alert alert-success">
        <label class="">@ViewBag.sucesso</label>
    </div>
}
@if (ViewBag.erro != null)
{
    <div class="alert alert-danger">
        <label class="">@ViewBag.erro</label>
    </div>
}

<div id="content">
    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-pencil-square-o fa-fw "></i>
                @ViewBag.Title
                <span>
                    >
                    @ViewBag.SubTitle
                </span>
            </h1>
        </div>
    </div>
    <article class="col-sm-12 col-md-12 col-lg-11 sortable-grid ui-sortable" id="content">
        <div class="jarviswidget jarviswidget-sortable" id="wid-id-1" data-widget-custombutton="false" data-widget-editbutton="false" data-widget-colorbutton="false">

            <div class="widget-body no-padding">
                @using (Html.BeginForm("Cadastrar", "Ato", FormMethod.Post, new { enctype = "multipart/form-data", id = "formEnvio", @class = "smart-form" }))
                {
                    @Html.AntiForgeryToken()
                    <header>
                        <h2 class="">
                            Cadastro de Atos
                        </h2>
                    </header>
                    <!-- DADOS MATRICULA-->
                    <fieldset>
                        <div class="row">
                            <section class="col col-6">
                                <button type="button" class="btn btn-default"
                                        data-toggle="modal" data-target="#BuscaMatricula"
                                        data-id="1"
                                        id="btnMatricula">
                                    <i class="glyphicon glyphicon-search"></i>
                                    Buscar Matricula
                                </button>
                            </section>
                        </div>
                        <div class="row">
                            <section class="col col-1 margin-top-10">
                                <label class="col-form-label">Nº da Matricula</label>
                            </section>
                            <section class="col col-3">
                                <div>
                                    @Html.TextBoxFor(model => model.PREIMO.MATRI,
                                        new { @class = "form-control", @placeholder = "Nº da Matricula", @readonly = "readonly" })
                                </div>
                            </section>
                            <section class="col col-1 margin-top-10">
                                <label class="col-form-label">Endereço</label>
                            </section>
                            <section class="col col-3">
                                <div>
                                    @Html.TextBoxFor(model => model.PREIMO.ENDER,
                                        new { @class = "form-control", @placeholder = "Endereço", @readonly = "readonly" })
                                </div>
                            </section>
                            <section class="col col-1 margin-top-10">
                                <label class="col-form-label">Outorgante</label>
                            </section>
                            <section class="col col-3">
                                <div>
                                    @Html.TextBoxFor(model => model.Pessoa.NOM,
                                        new { @class = "form-control", @placeholder = "Outorgante", @readonly = "readonly" })
                                </div>
                            </section>
                        </div>
                    </fieldset>
                    <!-- FIM DADOS MATRICULA-->
                    <!-- DADOS MODELO-->
                    <fieldset>
                        <div class="row">
                            <section class="col col-6">
                                <button type="button" class="btn btn-default"
                                        data-toggle="modal" data-target="#BuscaModelo"
                                        data-id="1"
                                        id="btnModelo" disabled>
                                    <i class="glyphicon glyphicon-search"></i>
                                    Buscar Modelo
                                </button>
                            </section>
                        </div>
                        <div class="row">
                            <section class="col margin-top-10">
                                <label class="col-form-label">Nome</label>
                            </section>
                            <section class="col col-2">
                                <div>
                                    @Html.TextBoxFor(model => model.ArquivoModelo.NomeModelo,
                                        new { @class = "form-control", @placeholder = "Nome", @readonly = "readonly" })
                                </div>
                            </section>
                            <section class="col margin-top-10">
                                <label class="col-form-label">Tipo</label>
                            </section>
                            <section class="col col-2">
                                <div>
                                    @Html.TextBoxFor(model => model.ArquivoModelo.DescricaoTipoAto,
                                        new { @class = "form-control", @placeholder = "Tipo de ato", @readonly = "readonly" })
                                    @Html.HiddenFor(model => model.IdTipoAto)
                                </div>
                            </section>
                        </div>
                    </fieldset>
                    <fieldset>
                        <!-- CK EDITOR-->
                        <br />
                        <div class="row" id="ckEditorGrid" hidden>
                            <div class="document-editor">
                                <div class="document-editor__toolbar"></div>
                                <div class="document-editor__editable-container">
                                    <div class="document-editor__editable block">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- FIM CK EDITOR-->
                    </fieldset>
                    <footer>
                        @Html.HiddenFor(model => model.Ato)
                        <button type="submit"
                                id="upload"
                                class="btn btn-success col-sm-12"
                                disabled>
                            <i class="glyphicon glyphicon-upload"></i>
                            Salvar
                        </button>
                    </footer>
                    <!-- FIM DADOS MODELO-->
                }
            </div>
        </div>
    </article>

</div>

<!-- Modal Matricula-->
<div class="modal fade" id="BuscaMatricula" role="dialog" tabindex="-1" data-backdrop="static" data-keyboard="false" style="width:80% !important ;">
    @{
        Html.RenderPartial("BuscaMatricula");
    }
</div>
<!-- Fim Modal Matricula-->
<!-- Modal Modelo-->
<div class="modal fade" id="BuscaModelo" role="dialog" tabindex="-1" data-backdrop="static" data-keyboard="false">
    @{
        Html.RenderPartial("BuscaModelo");
    }
</div>
<!-- Fim Modal Modelo-->
@Scripts.Render("~/Scripts/libs/jquery-2.1.1.min.js")

@section pagespecific{

    <script src="https://cdn.ckeditor.com/ckeditor5/12.0.0/decoupled-document/ckeditor.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.10/js/jquery.dataTables.min.js"></script>

    <script>
        /*************************************************************************************************
         ******************************* CRIANDO O EDITOR DE TEXTO WORD **********************************
         *************************************************************************************************/
        DecoupledEditor
            .create(document.querySelector('.document-editor__editable'), {
                cloudServices: {
                    //
                },
                toolbar: ['alignment:justify'],

            })
            .then(editor => {
                const toolbarContainer = document.querySelector('.document-editor__toolbar ');


                toolbarContainer.appendChild(editor.ui.view.toolbar.element);

                window.editor = editor;
            })
            .catch(err => {
                console.error(err);
            });
    </script>
    <script>
    //Ao clicar em Upload, atualiza o valor do campo Hidden com o valor do editor do word
    $('#upload').on('click', function () {
        var texto = editor.getData().replace(new RegExp('\<p\>', 'g'), "").replace(new RegExp('\<\/p\>', 'g'), '\n');
        $('#Ato').val(texto);
    });

    //Ao clicar, abre a modal, faz a chamada ajax.GET e atualiza a tabela
    $('#btnModelo').on('click',GetModelos);

    //Busca os dados do modelo cadastrado e popula o editor do word
    function AtualizarModelo(){
        var ModeloNome = $('#ModeloNome').val();
        $.ajax({
            url: '@Url.Action("UsaModeloParaAto", "Ato")',
            type: 'POST',
            data: {
                ModeloNome
            },
            success: function (result) {
                editor.setData(result);
                $('#upload').removeAttr('disabled');
                $('#ckEditorGrid').removeAttr('hidden');
            },
            error: function (error) {
                console.log(error);
                alert("Erro, tente novamente!");
            }
        });

        }

    //Pega os Modelos e atualiza a tabela
    function GetModelos() {
        $.get('@Url.Action("GetModelos", "Ato")', function (data, status) {
            resultado = JSON.parse(data);
            var tabela = $('#tabelaModelo tbody');
            tabela.html("");
            resultado.forEach(item => {
                tabela.append(`
                <tr role"row" id=${item.Id}>
                    <td class="idModelo">${item.Id}</td>
                    <td class="nomeModelo">${item.NomeModelo}</td>
                    <td class="descricaoTipoAto">${item.DescricaoTipoAto}</td>
                    <td>
                        <button class="btn btn-success enviar" onclick="enviarDados(this)" type="submit">
                            Usar
                        </button>
                    </td>
                </tr>`);
            });
            AjustarTabelaModelo();
        });
    }
    </script>
    <script>
        /***************************************************************************************************
         ****************************** AJUSTANDO A TABELA DA MODEL DE MODELOS *****************************
         ***************************************************************************************************/
        function AjustarTabelaModelo() {


            $('#tabelaModelo').DataTable({
                "destroy": true,
                "searching": false,
                "language": {
                    "lengthMenu": "Mostrando _MENU_ registros por página",
                    "search": "Filtre os modelos:",
                    "zeroRecords": "Nenhum Registro Encontrado",
                    "info": "Mostrando Página _PAGE_ de _PAGES_",
                    "infoEmpty": "Nenhum registro Disponível",
                    "infoFiltered": "(filtrado dos registros)"
                },
                "pageLength": 5,
                "bLengthChange": false,
                "columnDefs": [
                    {
                        "targets": [3],
                        orderable: false
                    },
                ]
            });
        };
    </script>
    <script>
        $('#btnPesquisar').on('click', function () {
            var numeroPrenotacao = parseInt($('#txtPrenotacao').val());
            var numeroMatricula = parseInt($('#txtMatricula').val());
            GetDadosImovel(numeroPrenotacao, numeroMatricula);
        })

    function GetDadosImovel(numPre, numMat) {



        $.get('@Url.Action("GetDadosImovel", "Ato")',{ numeroPrenotacao: numPre, numeroMatricula: numMat} ,function (data, status) {
            resultado = JSON.parse(data);
            console.log(resultado);
            var tabela = $('#tabelaImovel tbody');
            tabela.html("");
            
            tabela.append(`
                <tr role="row" id="${resultado.MATRI}">
                    <td class="matriculaId">${resultado.MATRI}</td>
                    <td class="nomeImovel">${resultado.EDIF}</td>
                    <td class="enderecoImovel">${resultado.ENDER},${resultado.NUM},Lote ${resultado.LOTE} - Apto ${resultado.APTO}</td>
                    <td class="contribuinteImovel">${resultado.CONTRIB}</td>
                    <td>
                        <button class="btn btn-success" onclick="enviarDadosMatricula(this)" type="submit">
                            Confirmar
                        </button>
                    </td>
                </tr>`);
            
        });
    }
    </script>
}

